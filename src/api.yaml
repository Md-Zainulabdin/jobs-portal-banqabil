openapi: 3.0.0
info:
  title: Job Portal API Documentation
  version: 1.0.0
  description: >
    This is the API documentation for the Job Portal.
    The API provides endpoints for managing user-related operations, authentication, authorization, and job-related operations.
    Users can register, retrieve all users, update user information, delete users, login, get authenticated user details, create, update, delete, and retrieve jobs.
servers:
  - url: http://localhost:8000/api/v1
paths:
  /user:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserInput'
      responses:
        '200':
          description: Successfully registered a new user

  /users:
    get:
      summary: Get all users
      responses:
        '200':
          description: Successfully retrieved all users

  /user/{id}:
    put:
      summary: Update user information
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdate'
      responses:
        '200':
          description: Successfully updated user information
        '401':
          description: Unauthorized

    delete:
      summary: Remove a user
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully removed the user
        '401':
          description: Unauthorized

  /login:
    post:
      summary: Login user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginInput'
      responses:
        '200':
          description: Successfully logged in
        '401':
          description: Unauthorized

  /authUser:
    get:
      summary: Get authenticated user details
      responses:
        '200':
          description: Successfully retrieved authenticated user details
        '401':
          description: Unauthorized

  /job/create:
    post:
      summary: Create a new job
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobInput'
      responses:
        '200':
          description: Successfully created a new job
        '401':
          description: Unauthorized

  /job/update/{id}:
    put:
      summary: Update job information
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JobUpdate'
      responses:
        '200':
          description: Successfully updated job information
        '401':
          description: Unauthorized

  /job/delete/{id}:
    delete:
      summary: Remove a job
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successfully removed the job
        '401':
          description: Unauthorized

  /jobs:
    get:
      summary: Get all jobs
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successfully retrieved all jobs
        '401':
          description: Unauthorized

components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
        name:
          type: string
        email:
          type: string
        created_at:
          type: string
          format: date-time

    UserInput:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        password:
          type: string

    UserUpdate:
      type: object
      properties:
        name:
          type: string
        email:
          type: string
          format: email
        password:
          type: string

    LoginInput:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string

    Job:
      type: object
      properties:
        _id:
          type: string
        user:
          type: string
        title:
          type: string
        email:
          type: string
        description:
          type: string
        salary:
          type: string
        slug:
          type: string
        jobType:
          type: string
          enum:
            - Remote
            - Hybrid
            - On-site
        location:
          type: string
        created_at:
          type: string
          format: date-time

    JobInput:
      type: object
      properties:
        title:
          type: string
        email:
          type: string
          format: email
        description:
          type: string
        salary:
          type: string
        slug:
          type: string
        jobType:
          type: string
          enum:
            - Remote
            - Hybrid
            - On-site
        location:
          type: string

    JobUpdate:
      type: object
      properties:
        title:
          type: string
        email:
          type: string
          format: email
        description:
          type: string
        salary:
          type: string
        slug:
          type: string
        jobType:
          type: string
          enum:
            - Remote
            - Hybrid
            - On-site
        location:
          type: string
